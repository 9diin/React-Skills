// 컴포넌트
// 프런트엔드 개발에서 컴포넌트(Component)는 웹 애플리케이션의 UI를
// 구성하는 독립적이고, 재사용 가능한 코드 조각(모음)을 의미합니다.

// 보통 HTML, CSS, 자바스크립트를 포함하며, 특정 기능이나 디자인을 담당합니다.
// 컴포넌트를 사용해서 애플리케이션의 복잡성을 줄이고, 쉽게 유지보수 할 수 있으므로
// 현대 웹 개발에서는 필수적인 개념입니다.

// 컴포넌트 장점
// 1. 재사용셩
// 같은 컴포넌트를 여러 영역에서 활용할 수 있어 코드 중복을 줄이고, 효율성을 높일 수 있습니다.

// 특히 전통적인  MPA(Multi Page Application) 구조에서는
// 각 페이지가 독립적으로 동작하기 때문에, 공통되는 레이아웃이나 UI 코드를 반복해서 작성하는 경우가 많습니다.
// 반면, 컴포넌트 기반 개발 방식에서는 이러한 공통 요소를 하나의 컴포넌트로 만들어 재사용할 수 있어
// 유지보수가 쉬워지고 개발 속도도 빨라집니다.

// 2. 상태 관리
// 컴포넌트 내부의 상태(state)와 로직은 외부에 노출되지 않아 독립성이 유지됩니다.
// HTML이나 CSS는 고정된 틀이지만, 그 안에서 다루는 데이터는 동적으로 변할 수 있습니다.
// 컴포넌트는 이런 변화를 유연하게 처리할 수 있도록 설계되어 있으며,
// 주로 내부의 상태(state)를 활용하거나,
// 상위 컴포넌트로부터 전달받은 값(props)을 통해 동작합니다.

// 3. 확장성
// 여러 개의 컴포넌트를 조합해 더 복잡한 UI를 구성할 수 있습니다.
// 예를 들어 버튼(Button), 입력 필드(Input Field), 카드(Card) 등 작은 단위의 컴포넌트를 조합해
// 폼, 레이아웃, 페이지 등을 만들 수 있습니다.
// 쉽게 말해, 컴포넌트 + 컴포넌트 = 새로운 컴포넌트라고 생각하면 됩니다.
